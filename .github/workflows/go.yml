name: Build Static Binaries

on:
  push:
  pull_request:

jobs:
  build:
    name: Build for ${{ matrix.os }} / ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            ext: ""         # Linux x64
          - os: linux
            arch: arm64
            ext: ""         # Linux ARM64
          - os: windows
            arch: amd64
            ext: ".exe"     # Windows x64
          - os: windows
            arch: arm64
            ext: ".exe"     # Windows ARM64
          - os: darwin
            arch: amd64
            ext: ""         # macOS x64
          - os: darwin
            arch: arm64
            ext: ""         # macOS ARM64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'

      - name: Build (static)
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: '0'
        run: |
          OUTPUT=bin/${{ matrix.os }}-${{ matrix.arch }}/tcp-proxy${{ matrix.ext }}
          mkdir -p "$(dirname "$OUTPUT")"
          go build -ldflags="-s -w" -o "$OUTPUT" main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tcp-proxy-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/${{ matrix.os }}-${{ matrix.arch }}/tcp-proxy${{ matrix.ext }}
